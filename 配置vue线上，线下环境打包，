通过webpack插件之DefinePlugin在编译阶段根据NODE_ENV自动切换配置文件，提升前端开发效率。

vue中通过cross-env插件配置三种环境(开发，测试，生产)打包，不用切换api


1. 话不多说，第一步就是安装必要的插件

2.npm i --save-dev cross-env

3.修改package.json 文件
    "build:test": "cross-env NODE_ENV=production env_config=test node build/build.js",
    "build:dev": "cross-env NODE_ENV=production env_config=dev node build/build.js",
    "build:prod": "cross-env NODE_ENV=production env_config=prod node build/build.js"
    
4.config/index.js
  build: {  //新增三个
    testEnv: require('./test.env'),
    devEnv: require('./dev.env'),
    testEnv: require('./test.env'),
                                      
5. 在webpackage.prod.conf.js中使用构建环境参数
// const env = process.env.NODE_ENV === 'testing'            //换掉env
//   ? require('../config/test.env')
//   : require('../config/prod.env')

const env = config.build[process.env.env_config + 'Env']


6. 调整build/build.js      

// const spinner = ora('building for production...')
const spinner=ora('building for'+ process.env.NODE_ENV+'of'+process.env.env_config+'mode...')
spinner.start()            
                                      










然后配置接口配置文件夹

if (process.env.NODE_ENV === 'development') {
  baseconfig = {
    baseurl: '',
    uploadurl: '',
    uploadmall1:'',
    baseserver: 'http://118.89.64.133/Channel-B2-Server/api',
    basemall: 'http://118.89.64.133/mall/api',
    // basemall: 'http://192.168.1.228:8182/mall/api',
    tms: 'http://118.89.64.133/tmsApi/api', //TMS接口地址
  }
} else if (process.env.NODE_ENV === 'testing') {
  baseconfig = {
    baseurl: 'http://118.89.64.133', // 测试环境打包,
    uploadurl: 'http://118.89.64.133', // 下载文件地址,
    baseserver: '/Channel-B2-Server/api',
    basemall: '/mall/api',
    tms: '/tmsApi/api', //TMS接口地址
  }
} 





